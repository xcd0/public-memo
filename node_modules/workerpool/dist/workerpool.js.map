{"version":3,"file":"workerpool.js","sources":["../src/environment.js","../src/Promise.js","../src/validateOptions.js","../src/generated/embeddedWorker.js","../src/WorkerHandler.js","../src/queues.js","../src/debug-port-allocator.js","../src/Pool.js","../src/transfer.js","../src/worker.js","../src/index.js"],"sourcesContent":["\n// source: https://github.com/flexdinesh/browser-or-node\n// source: https://github.com/mozilla/pdf.js/blob/7ea0e40e588864cd938d1836ec61f1928d3877d3/src/shared/util.js#L24\nvar isNode = function (nodeProcess) {\n  return (\n    typeof nodeProcess !== 'undefined' &&\n    nodeProcess.versions != null &&\n    nodeProcess.versions.node != null &&\n    nodeProcess + '' === '[object process]'\n  );\n}\nmodule.exports.isNode = isNode\n\n// determines the JavaScript platform: browser or node\nmodule.exports.platform = typeof process !== 'undefined' && isNode(process)\n  ? 'node'\n  : 'browser';\n\n// determines whether the code is running in main thread or not\n// note that in node.js we have to check both worker_thread and child_process\nvar worker_threads = module.exports.platform === 'node' && require('worker_threads');\nmodule.exports.isMainThread = module.exports.platform === 'node'\n  ? ((!worker_threads || worker_threads.isMainThread) && !process.connected)\n  : typeof Window !== 'undefined';\n\n// determines the number of cpus available\nmodule.exports.cpus = module.exports.platform === 'browser'\n  ? self.navigator.hardwareConcurrency\n  : require('os').cpus().length;\n\n","'use strict';\n\n/**\n * Promise\n *\n * Inspired by https://gist.github.com/RubaXa/8501359 from RubaXa <trash@rubaxa.org>\n * @template T\n * @template [E=Error]\n * @param {Function} handler   Called as handler(resolve: Function, reject: Function)\n * @param {Promise} [parent]   Parent promise for propagation of cancel and timeout\n */\nfunction Promise(handler, parent) {\n  var me = this;\n\n  if (!(this instanceof Promise)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  if (typeof handler !== 'function') {\n    throw new SyntaxError('Function parameter handler(resolve, reject) missing');\n  }\n\n  var _onSuccess = [];\n  var _onFail = [];\n\n  // status\n  /**\n   * @readonly\n   */\n  this.resolved = false;\n  /**\n   * @readonly\n   */\n  this.rejected = false;\n  /**\n   * @readonly\n   */\n  this.pending = true;\n  /**\n   * @readonly\n   */\n  this[Symbol.toStringTag] = 'Promise';\n\n  /**\n   * Process onSuccess and onFail callbacks: add them to the queue.\n   * Once the promise is resolved, the function _promise is replace.\n   * @param {Function} onSuccess\n   * @param {Function} onFail\n   * @private\n   */\n  var _process = function (onSuccess, onFail) {\n    _onSuccess.push(onSuccess);\n    _onFail.push(onFail);\n  };\n\n  /**\n   * Add an onSuccess callback and optionally an onFail callback to the Promise\n   * @template TT\n   * @template [TE=never]\n   * @param {(r: T) => TT | PromiseLike<TT>} onSuccess\n   * @param {(r: E) => TE | PromiseLike<TE>} [onFail]\n   * @returns {Promise<TT | TE, any>} promise\n   */\n  this.then = function (onSuccess, onFail) {\n    return new Promise(function (resolve, reject) {\n      var s = onSuccess ? _then(onSuccess, resolve, reject) : resolve;\n      var f = onFail    ? _then(onFail,    resolve, reject) : reject;\n\n      _process(s, f);\n    }, me);\n  };\n\n  /**\n   * Resolve the promise\n   * @param {*} result\n   * @type {Function}\n   */\n  var _resolve = function (result) {\n    // update status\n    me.resolved = true;\n    me.rejected = false;\n    me.pending = false;\n\n    _onSuccess.forEach(function (fn) {\n      fn(result);\n    });\n\n    _process = function (onSuccess, onFail) {\n      onSuccess(result);\n    };\n\n    _resolve = _reject = function () { };\n\n    return me;\n  };\n\n  /**\n   * Reject the promise\n   * @param {Error} error\n   * @type {Function}\n   */\n  var _reject = function (error) {\n    // update status\n    me.resolved = false;\n    me.rejected = true;\n    me.pending = false;\n\n    _onFail.forEach(function (fn) {\n      fn(error);\n    });\n\n    _process = function (onSuccess, onFail) {\n      onFail(error);\n    };\n\n    _resolve = _reject = function () { }\n\n    return me;\n  };\n\n  /**\n   * Cancel the promise. This will reject the promise with a CancellationError\n   * @returns {this} self\n   */\n  this.cancel = function () {\n    if (parent) {\n      parent.cancel();\n    }\n    else {\n      _reject(new CancellationError());\n    }\n\n    return me;\n  };\n\n  /**\n   * Set a timeout for the promise. If the promise is not resolved within\n   * the time, the promise will be cancelled and a TimeoutError is thrown.\n   * If the promise is resolved in time, the timeout is removed.\n   * @param {number} delay     Delay in milliseconds\n   * @returns {this} self\n   */\n  this.timeout = function (delay) {\n    if (parent) {\n      parent.timeout(delay);\n    }\n    else {\n      var timer = setTimeout(function () {\n        _reject(new TimeoutError('Promise timed out after ' + delay + ' ms'));\n      }, delay);\n\n      me.always(function () {\n        clearTimeout(timer);\n      });\n    }\n\n    return me;\n  };\n\n  // attach handler passing the resolve and reject functions\n  handler(function (result) {\n    _resolve(result);\n  }, function (error) {\n    _reject(error);\n  });\n}\n\n/**\n * Execute given callback, then call resolve/reject based on the returned result\n * @param {Function} callback\n * @param {Function} resolve\n * @param {Function} reject\n * @returns {Function}\n * @private\n */\nfunction _then(callback, resolve, reject) {\n  return function (result) {\n    try {\n      var res = callback(result);\n      if (res && typeof res.then === 'function' && typeof res['catch'] === 'function') {\n        // method returned a promise\n        res.then(resolve, reject);\n      }\n      else {\n        resolve(res);\n      }\n    }\n    catch (error) {\n      reject(error);\n    }\n  }\n}\n\n/**\n * Add an onFail callback to the Promise\n * @template TT\n * @param {(error: E) => TT | PromiseLike<TT>} onFail\n * @returns {Promise<T | TT>} promise\n */\nPromise.prototype['catch'] = function (onFail) {\n  return this.then(null, onFail);\n};\n\n// TODO: add support for Promise.catch(Error, callback)\n// TODO: add support for Promise.catch(Error, Error, callback)\n\n/**\n * Execute given callback when the promise either resolves or rejects.\n * @template TT\n * @param {() => Promise<TT>} fn\n * @returns {Promise<TT>} promise\n */\nPromise.prototype.always = function (fn) {\n  return this.then(fn, fn);\n};\n\n/**\n  * Execute given callback when the promise either resolves or rejects.\n  * Same semantics as Node's Promise.finally()\n  * @param {Function | null | undefined} [fn]\n  * @returns {Promise} promise\n  */\nPromise.prototype.finally = function (fn) {\n  const me = this;\n\n  const final = function() {\n    return new Promise((resolve) => resolve())\n      .then(fn)\n      .then(() => me);\n  };\n\n  return this.then(final, final);\n}\n\n/**\n * Create a promise which resolves when all provided promises are resolved,\n * and fails when any of the promises resolves.\n * @param {Promise[]} promises\n * @returns {Promise<any[], any>} promise\n */\nPromise.all = function (promises){\n  return new Promise(function (resolve, reject) {\n    var remaining = promises.length,\n        results = [];\n\n    if (remaining) {\n      promises.forEach(function (p, i) {\n        p.then(function (result) {\n          results[i] = result;\n          remaining--;\n          if (remaining == 0) {\n            resolve(results);\n          }\n        }, function (error) {\n          remaining = 0;\n          reject(error);\n        });\n      });\n    }\n    else {\n      resolve(results);\n    }\n  });\n};\n\n/**\n * Create a promise resolver\n * @returns {import('./types.js').Resolver} resolver\n */\nPromise.defer = function () {\n  var resolver = {};\n\n  resolver.promise = new Promise(function (resolve, reject) {\n    resolver.resolve = resolve;\n    resolver.reject = reject;\n  });\n\n  return resolver;\n};\n\n/**\n * Create a cancellation error\n * @param {String} [message]\n * @extends Error\n */\nfunction CancellationError(message) {\n  this.message = message || 'promise cancelled';\n  this.stack = (new Error()).stack;\n}\n\nCancellationError.prototype = new Error();\nCancellationError.prototype.constructor = Error;\nCancellationError.prototype.name = 'CancellationError';\n\nPromise.CancellationError = CancellationError;\n\n\n/**\n * Create a timeout error\n * @param {String} [message]\n * @extends Error\n */\nfunction TimeoutError(message) {\n  this.message = message || 'timeout exceeded';\n  this.stack = (new Error()).stack;\n}\n\nTimeoutError.prototype = new Error();\nTimeoutError.prototype.constructor = Error;\nTimeoutError.prototype.name = 'TimeoutError';\n\nPromise.TimeoutError = TimeoutError;\n\n\nexports.Promise = Promise;\n","/**\n * Validate that the object only contains known option names\n * - Throws an error when unknown options are detected\n * - Throws an error when some of the allowed options are attached\n * @param {Object | undefined} options\n * @param {string[]} allowedOptionNames\n * @param {string} objectName\n * @retrun {Object} Returns the original options\n */\nexports.validateOptions = function validateOptions(options, allowedOptionNames, objectName) {\n  if (!options) {\n    return\n  }\n\n  var optionNames = options ?  Object.keys(options) : []\n\n  // check for unknown properties\n  var unknownOptionName = optionNames.find(optionName => !allowedOptionNames.includes(optionName))\n  if (unknownOptionName) {\n    throw new Error('Object \"' + objectName + '\" contains an unknown option \"' + unknownOptionName + '\"')\n  }\n\n  // check for inherited properties which are not present on the object itself\n  var illegalOptionName = allowedOptionNames.find(allowedOptionName => {\n    return Object.prototype[allowedOptionName] && !optionNames.includes(allowedOptionName)\n  })\n  if (illegalOptionName) {\n    throw new Error('Object \"' + objectName + '\" contains an inherited option \"' + illegalOptionName + '\" which is ' +\n      'not defined in the object itself but in its prototype. Only plain objects are allowed. ' +\n      'Please remove the option from the prototype or override it with a value \"undefined\".')\n  }\n\n  return options\n}\n\n// source: https://developer.mozilla.org/en-US/docs/Web/API/Worker/Worker\nexports.workerOptsNames = [\n  'credentials', 'name', 'type' ]\n\n// source: https://nodejs.org/api/child_process.html#child_processforkmodulepath-args-options\nexports.forkOptsNames = [\n  'cwd', 'detached', 'env', 'execPath', 'execArgv', 'gid', 'serialization',\n  'signal', 'killSignal', 'silent', 'stdio', 'uid', 'windowsVerbatimArguments',\n  'timeout'\n]\n\n// source: https://nodejs.org/api/worker_threads.html#new-workerfilename-options\nexports.workerThreadOptsNames = [\n  'argv', 'env', 'eval', 'execArgv', 'stdin', 'stdout', 'stderr', 'workerData',\n  'trackUnmanagedFds', 'transferList', 'resourceLimits', 'name'\n]\n","/**\n * embeddedWorker.js contains an embedded version of worker.js.\n * This file is automatically generated,\n * changes made in this file will be overwritten.\n */\nmodule.exports = \"!function(e,n){\\\"object\\\"==typeof exports&&\\\"undefined\\\"!=typeof module?module.exports=n():\\\"function\\\"==typeof define&&define.amd?define(n):(e=\\\"undefined\\\"!=typeof globalThis?globalThis:e||self).worker=n()}(this,(function(){\\\"use strict\\\";function e(n){return e=\\\"function\\\"==typeof Symbol&&\\\"symbol\\\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\\\"function\\\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\\\"symbol\\\":typeof e},e(n)}function n(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\\\"default\\\")?e.default:e}var t={};var r=function(e,n){this.message=e,this.transfer=n},o={};function i(e,n){var t=this;if(!(this instanceof i))throw new SyntaxError(\\\"Constructor must be called with the new operator\\\");if(\\\"function\\\"!=typeof e)throw new SyntaxError(\\\"Function parameter handler(resolve, reject) missing\\\");var r=[],o=[];this.resolved=!1,this.rejected=!1,this.pending=!0,this[Symbol.toStringTag]=\\\"Promise\\\";var a=function(e,n){r.push(e),o.push(n)};this.then=function(e,n){return new i((function(t,r){var o=e?s(e,t,r):t,i=n?s(n,t,r):r;a(o,i)}),t)};var f=function(e){return t.resolved=!0,t.rejected=!1,t.pending=!1,r.forEach((function(n){n(e)})),a=function(n,t){n(e)},f=d=function(){},t},d=function(e){return t.resolved=!1,t.rejected=!0,t.pending=!1,o.forEach((function(n){n(e)})),a=function(n,t){t(e)},f=d=function(){},t};this.cancel=function(){return n?n.cancel():d(new u),t},this.timeout=function(e){if(n)n.timeout(e);else{var r=setTimeout((function(){d(new c(\\\"Promise timed out after \\\"+e+\\\" ms\\\"))}),e);t.always((function(){clearTimeout(r)}))}return t},e((function(e){f(e)}),(function(e){d(e)}))}function s(e,n,t){return function(r){try{var o=e(r);o&&\\\"function\\\"==typeof o.then&&\\\"function\\\"==typeof o.catch?o.then(n,t):n(o)}catch(e){t(e)}}}function u(e){this.message=e||\\\"promise cancelled\\\",this.stack=(new Error).stack}function c(e){this.message=e||\\\"timeout exceeded\\\",this.stack=(new Error).stack}return i.prototype.catch=function(e){return this.then(null,e)},i.prototype.always=function(e){return this.then(e,e)},i.prototype.finally=function(e){var n=this,t=function(){return new i((function(e){return e()})).then(e).then((function(){return n}))};return this.then(t,t)},i.all=function(e){return new i((function(n,t){var r=e.length,o=[];r?e.forEach((function(e,i){e.then((function(e){o[i]=e,0==--r&&n(o)}),(function(e){r=0,t(e)}))})):n(o)}))},i.defer=function(){var e={};return e.promise=new i((function(n,t){e.resolve=n,e.reject=t})),e},u.prototype=new Error,u.prototype.constructor=Error,u.prototype.name=\\\"CancellationError\\\",i.CancellationError=u,c.prototype=new Error,c.prototype.constructor=Error,c.prototype.name=\\\"TimeoutError\\\",i.TimeoutError=c,o.Promise=i,function(n){var t=r,i=o.Promise,s=\\\"__workerpool-cleanup__\\\",u={exit:function(){}},c={addAbortListener:function(e){u.abortListeners.push(e)},emit:u.emit};if(\\\"undefined\\\"!=typeof self&&\\\"function\\\"==typeof postMessage&&\\\"function\\\"==typeof addEventListener)u.on=function(e,n){addEventListener(e,(function(e){n(e.data)}))},u.send=function(e,n){n?postMessage(e,n):postMessage(e)};else{if(\\\"undefined\\\"==typeof process)throw new Error(\\\"Script must be executed as a worker\\\");var a;try{a=require(\\\"worker_threads\\\")}catch(n){if(\\\"object\\\"!==e(n)||null===n||\\\"MODULE_NOT_FOUND\\\"!==n.code)throw n}if(a&&null!==a.parentPort){var f=a.parentPort;u.send=f.postMessage.bind(f),u.on=f.on.bind(f),u.exit=process.exit.bind(process)}else u.on=process.on.bind(process),u.send=function(e){process.send(e)},u.on(\\\"disconnect\\\",(function(){process.exit(1)})),u.exit=process.exit.bind(process)}function d(e){return e&&e.toJSON?JSON.parse(JSON.stringify(e)):JSON.parse(JSON.stringify(e,Object.getOwnPropertyNames(e)))}function l(e){return e&&\\\"function\\\"==typeof e.then&&\\\"function\\\"==typeof e.catch}u.methods={},u.methods.run=function(e,n){var t=new Function(\\\"return (\\\"+e+\\\").apply(this, arguments);\\\");return t.worker=c,t.apply(t,n)},u.methods.methods=function(){return Object.keys(u.methods)},u.terminationHandler=void 0,u.abortListenerTimeout=1e3,u.abortListeners=[],u.terminateAndExit=function(e){var n=function(){u.exit(e)};if(!u.terminationHandler)return n();var t=u.terminationHandler(e);return l(t)?(t.then(n,n),t):(n(),new i((function(e,n){n(new Error(\\\"Worker terminating\\\"))})))},u.cleanup=function(e){if(!u.abortListeners.length)return u.send({id:e,method:s,error:d(new Error(\\\"Worker terminating\\\"))}),new i((function(e){e()}));var n,t=u.abortListeners.map((function(e){return e()})),r=new i((function(e,t){n=setTimeout((function(){t(new Error(\\\"Timeout occured waiting for abort handler, killing worker\\\"))}),u.abortListenerTimeout)})),o=i.all(t).then((function(){clearTimeout(n),u.abortListeners.length||(u.abortListeners=[])}),(function(){clearTimeout(n),u.exit()}));return new i((function(e,n){o.then(e,n),r.then(e,n)})).then((function(){u.send({id:e,method:s,error:null})}),(function(n){u.send({id:e,method:s,error:n?d(n):null})}))};var p=null;u.on(\\\"message\\\",(function(e){if(\\\"__workerpool-terminate__\\\"===e)return u.terminateAndExit(0);if(e.method===s)return u.cleanup(e.id);try{var n=u.methods[e.method];if(!n)throw new Error('Unknown method \\\"'+e.method+'\\\"');p=e.id;var r=n.apply(n,e.params);l(r)?r.then((function(n){n instanceof t?u.send({id:e.id,result:n.message,error:null},n.transfer):u.send({id:e.id,result:n,error:null}),p=null})).catch((function(n){u.send({id:e.id,result:null,error:d(n)}),p=null})):(r instanceof t?u.send({id:e.id,result:r.message,error:null},r.transfer):u.send({id:e.id,result:r,error:null}),p=null)}catch(n){u.send({id:e.id,result:null,error:d(n)})}})),u.register=function(e,n){if(e)for(var t in e)e.hasOwnProperty(t)&&(u.methods[t]=e[t],u.methods[t].worker=c);n&&(u.terminationHandler=n.onTerminate,u.abortListenerTimeout=n.abortListenerTimeout||1e3),u.send(\\\"ready\\\")},u.emit=function(e){if(p){if(e instanceof t)return void u.send({id:p,isEvent:!0,payload:e.message},e.transfer);u.send({id:p,isEvent:!0,payload:e})}},n.add=u.register,n.emit=u.emit}(t),n(t)}));\\n//# sourceMappingURL=worker.min.js.map\\n\";\n","'use strict';\n\nvar {Promise} = require('./Promise');\nvar environment = require('./environment');\nconst {validateOptions, forkOptsNames, workerThreadOptsNames, workerOptsNames} = require(\"./validateOptions\");\n\n/**\n * Special message sent by parent which causes a child process worker to terminate itself.\n * Not a \"message object\"; this string is the entire message.\n */\nvar TERMINATE_METHOD_ID = '__workerpool-terminate__';\n\n/**\n * Special message by parent which causes a child process worker to perform cleaup\n * steps before determining if the child process worker should be terminated.\n */\nvar CLEANUP_METHOD_ID = '__workerpool-cleanup__';\n\nfunction ensureWorkerThreads() {\n  var WorkerThreads = tryRequireWorkerThreads()\n  if (!WorkerThreads) {\n    throw new Error('WorkerPool: workerType = \\'thread\\' is not supported, Node >= 11.7.0 required')\n  }\n\n  return WorkerThreads;\n}\n\n// check whether Worker is supported by the browser\nfunction ensureWebWorker() {\n  // Workaround for a bug in PhantomJS (Or QtWebkit): https://github.com/ariya/phantomjs/issues/14534\n  if (typeof Worker !== 'function' && (typeof Worker !== 'object' || typeof Worker.prototype.constructor !== 'function')) {\n    throw new Error('WorkerPool: Web Workers not supported');\n  }\n}\n\nfunction tryRequireWorkerThreads() {\n  try {\n    return require('worker_threads');\n  } catch(error) {\n    if (typeof error === 'object' && error !== null && error.code === 'MODULE_NOT_FOUND') {\n      // no worker_threads available (old version of node.js)\n      return null;\n    } else {\n      throw error;\n    }\n  }\n}\n\n// get the default worker script\nfunction getDefaultWorker() {\n  if (environment.platform === 'browser') {\n    // test whether the browser supports all features that we need\n    if (typeof Blob === 'undefined') {\n      throw new Error('Blob not supported by the browser');\n    }\n    if (!window.URL || typeof window.URL.createObjectURL !== 'function') {\n      throw new Error('URL.createObjectURL not supported by the browser');\n    }\n\n    // use embedded worker.js\n    var blob = new Blob([require('./generated/embeddedWorker')], {type: 'text/javascript'});\n    return window.URL.createObjectURL(blob);\n  }\n  else {\n    // use external worker.js in current directory\n    return __dirname + '/worker.js';\n  }\n}\n\nfunction setupWorker(script, options) {\n  if (options.workerType === 'web') { // browser only\n    ensureWebWorker();\n    return setupBrowserWorker(script, options.workerOpts, Worker);\n  } else if (options.workerType === 'thread') { // node.js only\n    WorkerThreads = ensureWorkerThreads();\n    return setupWorkerThreadWorker(script, WorkerThreads, options);\n  } else if (options.workerType === 'process' || !options.workerType) { // node.js only\n    return setupProcessWorker(script, resolveForkOptions(options), require('child_process'));\n  } else { // options.workerType === 'auto' or undefined\n    if (environment.platform === 'browser') {\n      ensureWebWorker();\n      return setupBrowserWorker(script, options.workerOpts, Worker);\n    }\n    else { // environment.platform === 'node'\n      var WorkerThreads = tryRequireWorkerThreads();\n      if (WorkerThreads) {\n        return setupWorkerThreadWorker(script, WorkerThreads, options);\n      } else {\n        return setupProcessWorker(script, resolveForkOptions(options), require('child_process'));\n      }\n    }\n  }\n}\n\nfunction setupBrowserWorker(script, workerOpts, Worker) {\n  // validate the options right before creating the worker (not when creating the pool)\n  validateOptions(workerOpts, workerOptsNames, 'workerOpts')\n\n  // create the web worker\n  var worker = new Worker(script, workerOpts);\n\n  worker.isBrowserWorker = true;\n  // add node.js API to the web worker\n  worker.on = function (event, callback) {\n    this.addEventListener(event, function (message) {\n      callback(message.data);\n    });\n  };\n  worker.send = function (message, transfer) {\n    this.postMessage(message, transfer);\n  };\n  return worker;\n}\n\nfunction setupWorkerThreadWorker(script, WorkerThreads, options) {\n  // validate the options right before creating the worker thread (not when creating the pool)\n  validateOptions(options?.workerThreadOpts, workerThreadOptsNames, 'workerThreadOpts')\n\n  var worker = new WorkerThreads.Worker(script, {\n    stdout: options?.emitStdStreams ?? false, // pipe worker.STDOUT to process.STDOUT if not requested\n    stderr: options?.emitStdStreams ?? false,  // pipe worker.STDERR to process.STDERR if not requested\n    ...options?.workerThreadOpts\n  });\n  worker.isWorkerThread = true;\n  worker.send = function(message, transfer) {\n    this.postMessage(message, transfer);\n  };\n\n  worker.kill = function() {\n    this.terminate();\n    return true;\n  };\n\n  worker.disconnect = function() {\n    this.terminate();\n  };\n\n  if (options?.emitStdStreams) {\n    worker.stdout.on('data', (data) => worker.emit(\"stdout\", data))\n    worker.stderr.on('data', (data) => worker.emit(\"stderr\", data))\n  }\n\n  return worker;\n}\n\nfunction setupProcessWorker(script, options, child_process) {\n  // validate the options right before creating the child process (not when creating the pool)\n  validateOptions(options.forkOpts, forkOptsNames, 'forkOpts')\n\n  // no WorkerThreads, fallback to sub-process based workers\n  var worker = child_process.fork(\n    script,\n    options.forkArgs,\n    options.forkOpts\n  );\n\n  // ignore transfer argument since it is not supported by process\n  var send = worker.send;\n  worker.send = function (message) {\n    return send.call(worker, message);\n  };\n\n  if (options.emitStdStreams) {\n    worker.stdout.on('data', (data) => worker.emit(\"stdout\", data))\n    worker.stderr.on('data', (data) => worker.emit(\"stderr\", data))\n  }\n\n  worker.isChildProcess = true;\n  return worker;\n}\n\n// add debug flags to child processes if the node inspector is active\nfunction resolveForkOptions(opts) {\n  opts = opts || {};\n\n  var processExecArgv = process.execArgv.join(' ');\n  var inspectorActive = processExecArgv.indexOf('--inspect') !== -1;\n  var debugBrk = processExecArgv.indexOf('--debug-brk') !== -1;\n\n  var execArgv = [];\n  if (inspectorActive) {\n    execArgv.push('--inspect=' + opts.debugPort);\n\n    if (debugBrk) {\n      execArgv.push('--debug-brk');\n    }\n  }\n\n  process.execArgv.forEach(function(arg) {\n    if (arg.indexOf('--max-old-space-size') > -1) {\n      execArgv.push(arg)\n    }\n  })\n\n  return Object.assign({}, opts, {\n    forkArgs: opts.forkArgs,\n    forkOpts: Object.assign({}, opts.forkOpts, {\n      execArgv: (opts.forkOpts && opts.forkOpts.execArgv || [])\n      .concat(execArgv),\n      stdio: opts.emitStdStreams ? \"pipe\": undefined\n    })\n  });\n}\n\n/**\n * Converts a serialized error to Error\n * @param {Object} obj Error that has been serialized and parsed to object\n * @return {Error} The equivalent Error.\n */\nfunction objectToError (obj) {\n  var temp = new Error('')\n  var props = Object.keys(obj)\n\n  for (var i = 0; i < props.length; i++) {\n    temp[props[i]] = obj[props[i]]\n  }\n\n  return temp\n}\n\nfunction handleEmittedStdPayload(handler, payload) {\n  // TODO: refactor if parallel task execution gets added\n  Object.values(handler.processing)\n    .forEach(task => task?.options?.on(payload));\n  \n  Object.values(handler.tracking)\n    .forEach(task => task?.options?.on(payload)); \n}\n\n/**\n * A WorkerHandler controls a single worker. This worker can be a child process\n * on node.js or a WebWorker in a browser environment.\n * @param {String} [script] If no script is provided, a default worker with a\n *                          function run will be created.\n * @param {import('./types.js').WorkerPoolOptions} [_options] See docs\n * @constructor\n */\nfunction WorkerHandler(script, _options) {\n  var me = this;\n  var options = _options || {};\n\n  this.script = script || getDefaultWorker();\n  this.worker = setupWorker(this.script, options);\n  this.debugPort = options.debugPort;\n  this.forkOpts = options.forkOpts;\n  this.forkArgs = options.forkArgs;\n  this.workerOpts = options.workerOpts;\n  this.workerThreadOpts = options.workerThreadOpts\n  this.workerTerminateTimeout = options.workerTerminateTimeout;\n\n  // The ready message is only sent if the worker.add method is called (And the default script is not used)\n  if (!script) {\n    this.worker.ready = true;\n  }\n\n  // queue for requests that are received before the worker is ready\n  this.requestQueue = [];\n\n  this.worker.on(\"stdout\", function (data) {\n    handleEmittedStdPayload(me, {\"stdout\": data.toString()})\n  })\n  this.worker.on(\"stderr\", function (data) {\n    handleEmittedStdPayload(me, {\"stderr\": data.toString()})\n  })\n\n  this.worker.on('message', function (response) {\n    if (me.terminated) {\n      return;\n    }\n    if (typeof response === 'string' && response === 'ready') {\n      me.worker.ready = true;\n      dispatchQueuedRequests();\n    } else {\n      // find the task from the processing queue, and run the tasks callback\n      var id = response.id;\n      var task = me.processing[id];\n      if (task !== undefined) {\n        if (response.isEvent) {\n          if (task.options && typeof task.options.on === 'function') {\n            task.options.on(response.payload);\n          }\n        } else {\n          // remove the task from the queue\n          delete me.processing[id];\n\n          // test if we need to terminate\n          if (me.terminating === true) {\n            // complete worker termination if all tasks are finished\n            me.terminate();\n          }\n\n          // resolve the task's promise\n          if (response.error) {\n            task.resolver.reject(objectToError(response.error));\n          }\n          else {\n            task.resolver.resolve(response.result);\n          }\n        }\n      } else {\n        // if the task is not the current, it might be tracked for cleanup\n        var task = me.tracking[id];\n        if (task !== undefined) {\n          if (response.isEvent) {\n            if (task.options && typeof task.options.on === 'function') {\n              task.options.on(response.payload);\n            }\n          }\n        } \n      }\n\n      if (response.method === CLEANUP_METHOD_ID) {\n        var trackedTask = me.tracking[response.id];\n        if (trackedTask !== undefined) {\n          if (response.error) {\n            clearTimeout(trackedTask.timeoutId);\n            trackedTask.resolver.reject(objectToError(response.error))\n          } else {\n            me.tracking && clearTimeout(trackedTask.timeoutId);\n            // if we do not encounter an error wrap the the original timeout error and reject\n            trackedTask.resolver.reject(new WrappedTimeoutError(trackedTask.error));\n          }\n        }\n        delete me.tracking[id];\n      }\n    }\n  });\n\n  // reject all running tasks on worker error\n  function onError(error) {\n    me.terminated = true;\n\n    for (var id in me.processing) {\n      if (me.processing[id] !== undefined) {\n        me.processing[id].resolver.reject(error);\n      }\n    }\n    \n    me.processing = Object.create(null);\n  }\n\n  // send all queued requests to worker\n  function dispatchQueuedRequests()\n  {\n    for(const request of me.requestQueue.splice(0)) {\n      me.worker.send(request.message, request.transfer);\n    }\n  }\n\n  var worker = this.worker;\n  // listen for worker messages error and exit\n  this.worker.on('error',function (error) {\n    onError(new TerminateError('Workerpool Worker error: ' + error.message, error))\n  });\n  this.worker.on('exit', function (exitCode, signalCode) {\n    var message = 'Workerpool Worker terminated Unexpectedly\\n';\n\n    message += '    exitCode: `' + exitCode + '`\\n';\n    message += '    signalCode: `' + signalCode + '`\\n';\n\n    message += '    workerpool.script: `' +  me.script + '`\\n';\n    message += '    spawnArgs: `' +  worker.spawnargs + '`\\n';\n    message += '    spawnfile: `' + worker.spawnfile + '`\\n'\n\n    message += '    stdout: `' + worker.stdout + '`\\n'\n    message += '    stderr: `' + worker.stderr + '`\\n'\n\n    onError(new TerminateError(message));\n  });\n\n  this.processing = Object.create(null); // queue with tasks currently in progress\n  this.tracking = Object.create(null); // queue with tasks being monitored for cleanup status\n  this.terminating = false;\n  this.terminated = false;\n  this.cleaning = false;\n  this.terminationHandler = null;\n  this.lastId = 0;\n}\n\n/**\n * Get a list with methods available on the worker.\n * @return {Promise.<String[], Error>} methods\n */\nWorkerHandler.prototype.methods = function () {\n  return this.exec('methods');\n};\n\n/**\n * Execute a method with given parameters on the worker\n * @param {String} method\n * @param {Array} [params]\n * @param {{resolve: Function, reject: Function}} [resolver]\n * @param {import('./types.js').ExecOptions}  [options]\n * @return {Promise.<*, Error>} result\n */\nWorkerHandler.prototype.exec = function(method, params, resolver, options) {\n  if (!resolver) {\n    resolver = Promise.defer();\n  }\n\n  // generate a unique id for the task\n  var id = ++this.lastId;\n\n  // register a new task as being in progress\n  this.processing[id] = {\n    id: id,\n    resolver: resolver,\n    options: options\n  };\n\n  // build a JSON-RPC request\n  var request = {\n    message: {\n      id: id,\n      method: method,\n      params: params\n    },\n    transfer: options && options.transfer\n  };\n\n  if (this.terminated) {\n    resolver.reject(new TerminateError('Worker is terminated'));\n  } else if (this.worker.ready) {\n    // send the request to the worker\n    this.worker.send(request.message, request.transfer);\n  } else {\n    this.requestQueue.push(request);\n  }\n\n  // on cancellation, force the worker to terminate\n  var me = this;\n  return resolver.promise.catch(function (error) {\n    if (error instanceof Promise.CancellationError || error instanceof Promise.TimeoutError) {\n      me.tracking[id] = {\n        id,\n        resolver: Promise.defer(),\n        options: options,\n        error,\n      };\n      \n      // remove this task from the queue. It is already rejected (hence this\n      // catch event), and else it will be rejected again when terminating\n      delete me.processing[id];\n\n      me.tracking[id].resolver.promise = me.tracking[id].resolver.promise.catch(function(err) {\n        delete me.tracking[id];\n\n        // if we find the error is an instance of WrappedTimeoutError we know the error should not cause termination\n        // as the response from the worker did not contain an error. We still wish to throw the original timeout error\n        // to the caller.\n        if (err instanceof WrappedTimeoutError) {\n          throw err.error;\n        }\n\n        var promise = me.terminateAndNotify(true)\n          .then(function() { \n            throw err;\n          }, function(err) {\n            throw err;\n          });\n\n        return promise;\n      });\n \n      me.worker.send({\n        id,\n        method: CLEANUP_METHOD_ID \n      });\n      \n      \n      /**\n        * Sets a timeout to reject the cleanup operation if the message sent to the worker\n        * does not receive a response. see worker.tryCleanup for worker cleanup operations.\n        * Here we use the workerTerminateTimeout as the worker will be terminated if the timeout does invoke.\n        * \n        * We need this timeout in either case of a Timeout or Cancellation Error as if\n        * the worker does not send a message we still need to give a window of time for a response.\n        * \n        * The workerTermniateTimeout is used here if this promise is rejected the worker cleanup\n        * operations will occure.\n      */\n      me.tracking[id].timeoutId = setTimeout(function() {\n          me.tracking[id].resolver.reject(error);\n      }, me.workerTerminateTimeout);\n\n      return me.tracking[id].resolver.promise;\n    } else {\n      throw error;\n    }\n  })\n};\n\n/**\n * Test whether the worker is processing any tasks or cleaning up before termination.\n * @return {boolean} Returns true if the worker is busy\n */\nWorkerHandler.prototype.busy = function () {\n  return this.cleaning || Object.keys(this.processing).length > 0;\n};\n\n/**\n * Terminate the worker.\n * @param {boolean} [force=false]   If false (default), the worker is terminated\n *                                  after finishing all tasks currently in\n *                                  progress. If true, the worker will be\n *                                  terminated immediately.\n * @param {function} [callback=null] If provided, will be called when process terminates.\n */\nWorkerHandler.prototype.terminate = function (force, callback) {\n  var me = this;\n  if (force) {\n    // cancel all tasks in progress\n    for (var id in this.processing) {\n      if (this.processing[id] !== undefined) {\n        this.processing[id].resolver.reject(new Error('Worker terminated'));\n      }\n    }\n\n    this.processing = Object.create(null);\n  }\n\n  // If we are terminating, cancel all tracked task for cleanup\n  for (var task of Object.values(me.tracking)) {\n    clearTimeout(task.timeoutId);\n    task.resolver.reject(new Error('Worker Terminating'));\n  }\n\n  me.tracking = Object.create(null);\n\n  if (typeof callback === 'function') {\n    this.terminationHandler = callback;\n  }\n  if (!this.busy()) {\n    // all tasks are finished. kill the worker\n    var cleanup = function(err) {\n      me.terminated = true;\n      me.cleaning = false;\n\n      if (me.worker != null && me.worker.removeAllListeners) {\n        // removeAllListeners is only available for child_process\n        me.worker.removeAllListeners('message');\n      }\n      me.worker = null;\n      me.terminating = false;\n      if (me.terminationHandler) {\n        me.terminationHandler(err, me);\n      } else if (err) {\n        throw err;\n      }\n    }\n\n    if (this.worker) {\n      if (typeof this.worker.kill === 'function') {\n        if (this.worker.killed) {\n          cleanup(new Error('worker already killed!'));\n          return;\n        }\n\n        // child process and worker threads\n        var cleanExitTimeout = setTimeout(function() {\n          if (me.worker) {\n            me.worker.kill();\n          }\n        }, this.workerTerminateTimeout);\n\n        this.worker.once('exit', function() {\n          clearTimeout(cleanExitTimeout);\n          if (me.worker) {\n            me.worker.killed = true;\n          }\n          cleanup();\n        });\n\n        if (this.worker.ready) {\n          this.worker.send(TERMINATE_METHOD_ID);\n        } else {\n          this.requestQueue.push({ message: TERMINATE_METHOD_ID });\n        }\n\n        // mark that the worker is cleaning up resources\n        // to prevent new tasks from being executed\n        this.cleaning = true;\n        return;\n      }\n      else if (typeof this.worker.terminate === 'function') {\n        this.worker.terminate(); // web worker\n        this.worker.killed = true;\n      }\n      else {\n        throw new Error('Failed to terminate worker');\n      }\n    }\n    cleanup();\n  }\n  else {\n    // we can't terminate immediately, there are still tasks being executed\n    this.terminating = true;\n  }\n};\n\n/**\n * Terminate the worker, returning a Promise that resolves when the termination has been done.\n * @param {boolean} [force=false]   If false (default), the worker is terminated\n *                                  after finishing all tasks currently in\n *                                  progress. If true, the worker will be\n *                                  terminated immediately.\n * @param {number} [timeout]        If provided and non-zero, worker termination promise will be rejected\n *                                  after timeout if worker process has not been terminated.\n * @return {Promise.<WorkerHandler, Error>}\n */\nWorkerHandler.prototype.terminateAndNotify = function (force, timeout) {\n  var resolver = Promise.defer();\n  if (timeout) {\n    resolver.promise.timeout(timeout);\n  }\n  this.terminate(force, function(err, worker) {\n    if (err) {\n      resolver.reject(err);\n    } else {\n      resolver.resolve(worker);\n    }\n  });\n  return resolver.promise;\n};\n\n/**\n* Wrapper error type to denote that a TimeoutError has already been proceesed\n* and we should skip cleanup operations\n* @param {Promise.TimeoutError} timeoutError\n*/\nfunction WrappedTimeoutError(timeoutError) {\n  this.error = timeoutError;\n  this.stack = (new Error()).stack;\n}\n\nclass TerminateError extends Error {\n  /**\n   * Create a timeout error\n   * @param {String} [message]\n   * @param {Error=} [cause]\n   */\n  constructor(message, cause) {\n    super(message || 'worker terminated');\n    this.cause = cause;\n  }\n}\n\nmodule.exports = WorkerHandler;\nmodule.exports._tryRequireWorkerThreads = tryRequireWorkerThreads;\nmodule.exports._setupProcessWorker = setupProcessWorker;\nmodule.exports._setupBrowserWorker = setupBrowserWorker;\nmodule.exports._setupWorkerThreadWorker = setupWorkerThreadWorker;\nmodule.exports.ensureWorkerThreads = ensureWorkerThreads;\nmodule.exports.TerminateError = TerminateError\n\n","/**\n * FIFO Queue implementation\n * @template [T=any]\n * @constructor\n * @implements {import('./types').TaskQueue<T>}\n */\nfunction FIFOQueue() {\n  /** @type {import('./types').Task<T>[]} */\n  this.tasks = [];\n}\n\n/**\n * @param {import('./types').Task<T>} task\n * @returns {void}\n */\nFIFOQueue.prototype.push = function (task) {\n  this.tasks.push(task);\n};\n\n/**\n * @returns {import('./types').Task<T> | undefined}\n */\nFIFOQueue.prototype.pop = function () {\n  return this.tasks.shift();\n};\n\n/**\n * @returns {number}\n */\nFIFOQueue.prototype.size = function () {\n  return this.tasks.length;\n};\n\n/**\n * @param {import('./types').Task<T>} task\n * @returns {boolean}\n */\nFIFOQueue.prototype.contains = function (task) {\n  return this.tasks.includes(task);\n};\n\n/**\n * @returns {void}\n */\nFIFOQueue.prototype.clear = function () {\n  this.tasks.length = 0;\n};\n\n/**\n * LIFO Queue implementation\n * @template [T=any]\n * @constructor\n * @implements {import('./types').TaskQueue<T>}\n */\nfunction LIFOQueue() {\n  /** @type {import('./types').Task<T>[]} */\n  this.tasks = [];\n}\n\n/**\n * @param {import('./types').Task<T>} task\n * @returns {void}\n */\nLIFOQueue.prototype.push = function (task) {\n  this.tasks.push(task);\n};\n\n/**\n * @returns {import('./types').Task<T> | undefined}\n */\nLIFOQueue.prototype.pop = function () {\n  return this.tasks.pop();\n};\n\n/**\n * @returns {number}\n */\nLIFOQueue.prototype.size = function () {\n  return this.tasks.length;\n};\n\n/**\n * @param {import('./types').Task<T>} task\n * @returns {boolean}\n */\nLIFOQueue.prototype.contains = function (task) {\n  return this.tasks.includes(task);\n};\n\n/**\n * @returns {void}\n */\nLIFOQueue.prototype.clear = function () {\n  this.tasks.length = 0;\n};\n\nmodule.exports = { FIFOQueue, LIFOQueue };\n","'use strict';\n\nvar MAX_PORTS = 65535;\nmodule.exports = DebugPortAllocator;\nfunction DebugPortAllocator() {\n  this.ports = Object.create(null);\n  this.length = 0;\n}\n\nDebugPortAllocator.prototype.nextAvailableStartingAt = function(starting) {\n  while (this.ports[starting] === true) {\n    starting++;\n  }\n\n  if (starting >= MAX_PORTS) {\n    throw new Error('WorkerPool debug port limit reached: ' + starting + '>= ' + MAX_PORTS );\n  }\n\n  this.ports[starting] = true;\n  this.length++;\n  return starting;\n};\n\nDebugPortAllocator.prototype.releasePort = function(port) {\n  delete this.ports[port];\n  this.length--;\n};\n\n","var { Promise } = require(\"./Promise\");\nvar WorkerHandler = require(\"./WorkerHandler\");\nvar environment = require(\"./environment\");\nvar { FIFOQueue, LIFOQueue } = require(\"./queues\");\nvar DebugPortAllocator = require(\"./debug-port-allocator\");\nvar DEBUG_PORT_ALLOCATOR = new DebugPortAllocator();\n\n/**\n * A pool to manage workers, which can be created using the function workerpool.pool.\n *\n * @param {String} [script]   Optional worker script\n * @param {import('./types.js').WorkerPoolOptions} [options]  See docs\n * @constructor\n */\nfunction Pool(script, options) {\n  if (typeof script === \"string\") {\n    /** @readonly */\n    this.script = script || null;\n  } else {\n    this.script = null;\n    options = script;\n  }\n\n  /** @private */\n  this.workers = []; // queue with all workers\n\n  /** @private */\n  this.taskQueue = this._createQueue(\n    (options && options.queueStrategy) || \"fifo\"\n  ); // queue with tasks awaiting execution\n\n  options = options || {};\n\n  /** @readonly */\n  this.forkArgs = Object.freeze(options.forkArgs || []);\n  /** @readonly */\n  this.forkOpts = Object.freeze(options.forkOpts || {});\n  /** @readonly */\n  this.workerOpts = Object.freeze(options.workerOpts || {});\n  /** @readonly */\n  this.workerThreadOpts = Object.freeze(options.workerThreadOpts || {});\n  /** @private */\n  this.debugPortStart = options.debugPortStart || 43210;\n  /** @readonly @deprecated */\n  this.nodeWorker = options.nodeWorker;\n  /** @readonly\n   * @type {'auto' | 'web' | 'process' | 'thread'}\n   */\n  this.workerType = options.workerType || options.nodeWorker || \"auto\";\n  /** @readonly */\n  this.maxQueueSize = options.maxQueueSize || Infinity;\n  /** @readonly */\n  this.workerTerminateTimeout = options.workerTerminateTimeout || 1000;\n\n  /** @readonly */\n  this.onCreateWorker = options.onCreateWorker || (() => null);\n  /** @readonly */\n  this.onTerminateWorker = options.onTerminateWorker || (() => null);\n\n  /** @readonly */\n  this.emitStdStreams = options.emitStdStreams || false;\n\n  // configuration\n  if (options && \"maxWorkers\" in options) {\n    validateMaxWorkers(options.maxWorkers);\n    /** @readonly */\n    this.maxWorkers = options.maxWorkers;\n  } else {\n    this.maxWorkers = Math.max((environment.cpus || 4) - 1, 1);\n  }\n\n  if (options && \"minWorkers\" in options) {\n    if (options.minWorkers === \"max\") {\n      /** @readonly */\n      this.minWorkers = this.maxWorkers;\n    } else {\n      validateMinWorkers(options.minWorkers);\n      this.minWorkers = options.minWorkers;\n      this.maxWorkers = Math.max(this.minWorkers, this.maxWorkers); // in case minWorkers is higher than maxWorkers\n    }\n    this._ensureMinWorkers();\n  }\n\n  /** @private */\n  this._boundNext = this._next.bind(this);\n\n  if (this.workerType === \"thread\") {\n    WorkerHandler.ensureWorkerThreads();\n  }\n}\n\n/**\n * Execute a function on a worker.\n *\n * Example usage:\n *\n *   var pool = new Pool()\n *\n *   // call a function available on the worker\n *   pool.exec('fibonacci', [6])\n *\n *   // offload a function\n *   function add(a, b) {\n *     return a + b\n *   };\n *   pool.exec(add, [2, 4])\n *       .then(function (result) {\n *         console.log(result); // outputs 6\n *       })\n *       .catch(function(error) {\n *         console.log(error);\n *       });\n * @template { (...args: any[]) => any } T\n * @param {String | T} method  Function name or function.\n *                                    If `method` is a string, the corresponding\n *                                    method on the worker will be executed\n *                                    If `method` is a Function, the function\n *                                    will be stringified and executed via the\n *                                    workers built-in function `run(fn, args)`.\n * @param {Parameters<T> | null} [params]  Function arguments applied when calling the function\n * @param {import('./types.js').ExecOptions} [options]  Options\n * @return {Promise<ReturnType<T>>}\n */\nPool.prototype.exec = function (method, params, options) {\n  // validate type of arguments\n  if (params && !Array.isArray(params)) {\n    throw new TypeError('Array expected as argument \"params\"');\n  }\n\n  if (typeof method === \"string\") {\n    var resolver = Promise.defer();\n\n    if (this.taskQueue.size() >= this.maxQueueSize) {\n      throw new Error(\"Max queue size of \" + this.maxQueueSize + \" reached\");\n    }\n\n    // add a new task to the queue\n    var task = {\n      method: method,\n      params: params,\n      resolver: resolver,\n      timeout: null,\n      options: options,\n    };\n    this.taskQueue.push(task);\n\n    // replace the timeout method of the Promise with our own,\n    // which starts the timer as soon as the task is actually started\n    // TODO: how can i find if the task is still in the queue?\n    var originalTimeout = resolver.promise.timeout;\n    var taskQueue = this.taskQueue;\n    resolver.promise.timeout = function timeout(delay) {\n      if (taskQueue.contains(task)) {\n        // task is still queued -> start the timer later on\n        task.timeout = delay;\n        return resolver.promise;\n      } else {\n        // task is already being executed -> start timer immediately\n        return originalTimeout.call(resolver.promise, delay);\n      }\n    };\n\n    // trigger task execution\n    this._next();\n\n    return resolver.promise;\n  } else if (typeof method === \"function\") {\n    // send stringified function and function arguments to worker\n    return this.exec(\"run\", [String(method), params], options);\n  } else {\n    throw new TypeError('Function or string expected as argument \"method\"');\n  }\n};\n\n/**\n * Create a proxy for current worker. Returns an object containing all\n * methods available on the worker. All methods return promises resolving the methods result.\n * @template { { [k: string]: (...args: any[]) => any } } T\n * @return {Promise<import('./types.js').Proxy<T>, Error>} Returns a promise which resolves with a proxy object\n */\nPool.prototype.proxy = function () {\n  if (arguments.length > 0) {\n    throw new Error(\"No arguments expected\");\n  }\n\n  var pool = this;\n  return this.exec(\"methods\").then(function (methods) {\n    var proxy = {};\n\n    methods.forEach(function (method) {\n      proxy[method] = function () {\n        return pool.exec(method, Array.prototype.slice.call(arguments));\n      };\n    });\n\n    return proxy;\n  });\n};\n\n/**\n * Creates new array with the results of calling a provided callback function\n * on every element in this array.\n * @param {Array} array\n * @param {function} callback  Function taking two arguments:\n *                             `callback(currentValue, index)`\n * @return {Promise.<Array>} Returns a promise which resolves  with an Array\n *                           containing the results of the callback function\n *                           executed for each of the array elements.\n */\n/* TODO: implement map\nPool.prototype.map = function (array, callback) {\n};\n*/\n\n/**\n * Grab the first task from the queue, find a free worker, and assign the\n * worker to the task.\n * @private\n */\nPool.prototype._next = function () {\n  if (this.taskQueue.size() > 0) {\n    // there are tasks in the queue\n\n    // find an available worker\n    var worker = this._getWorker();\n    if (worker) {\n      // get the first task from the queue\n      var me = this;\n      var task = this.taskQueue.pop();\n\n      // check if the task is still pending (and not cancelled -> promise rejected)\n      if (task.resolver.promise.pending) {\n        // send the request to the worker\n        var promise = worker\n          .exec(task.method, task.params, task.resolver, task.options)\n          .then(me._boundNext)\n          .catch(function () {\n            // if the worker crashed and terminated, remove it from the pool\n            if (worker.terminated) {\n              return me._removeWorker(worker);\n            }\n          })\n          .then(function () {\n            me._next(); // trigger next task in the queue\n          });\n\n        // start queued timer now\n        if (typeof task.timeout === \"number\") {\n          promise.timeout(task.timeout);\n        }\n      } else {\n        // The task taken was already complete (either rejected or resolved), so just trigger next task in the queue\n        me._next();\n      }\n    }\n  }\n};\n\n/**\n * Get an available worker. If no worker is available and the maximum number\n * of workers isn't yet reached, a new worker will be created and returned.\n * If no worker is available and the maximum number of workers is reached,\n * null will be returned.\n *\n * @return {WorkerHandler | null} worker\n * @private\n */\nPool.prototype._getWorker = function () {\n  // find a non-busy worker\n  var workers = this.workers;\n  for (var i = 0; i < workers.length; i++) {\n    var worker = workers[i];\n    if (worker.busy() === false) {\n      return worker;\n    }\n  }\n\n  if (workers.length < this.maxWorkers) {\n    // create a new worker\n    worker = this._createWorkerHandler();\n    workers.push(worker);\n    return worker;\n  }\n\n  return null;\n};\n\n/**\n * Remove a worker from the pool.\n * Attempts to terminate worker if not already terminated, and ensures the minimum\n * pool size is met.\n * @param {WorkerHandler} worker\n * @return {Promise<WorkerHandler>}\n * @private\n */\nPool.prototype._removeWorker = function (worker) {\n  var me = this;\n\n  DEBUG_PORT_ALLOCATOR.releasePort(worker.debugPort);\n  // _removeWorker will call this, but we need it to be removed synchronously\n  this._removeWorkerFromList(worker);\n  // If minWorkers set, spin up new workers to replace the crashed ones\n  this._ensureMinWorkers();\n  // terminate the worker (if not already terminated)\n  return new Promise(function (resolve, reject) {\n    worker.terminate(false, function (err) {\n      me.onTerminateWorker({\n        forkArgs: worker.forkArgs,\n        forkOpts: worker.forkOpts,\n        workerThreadOpts: worker.workerThreadOpts,\n        script: worker.script,\n      });\n      if (err) {\n        reject(err);\n      } else {\n        resolve(worker);\n      }\n    });\n  });\n};\n\n/**\n * Remove a worker from the pool list.\n * @param {WorkerHandler} worker\n * @private\n */\nPool.prototype._removeWorkerFromList = function (worker) {\n  // remove from the list with workers\n  var index = this.workers.indexOf(worker);\n  if (index !== -1) {\n    this.workers.splice(index, 1);\n  }\n};\n\n/**\n * Close all active workers. Tasks currently being executed will be finished first.\n * @param {boolean} [force=false]   If false (default), the workers are terminated\n *                                  after finishing all tasks currently in\n *                                  progress. If true, the workers will be\n *                                  terminated immediately.\n * @param {number} [timeout]        If provided and non-zero, worker termination promise will be rejected\n *                                  after timeout if worker process has not been terminated.\n * @return {Promise.<void, Error>}\n */\nPool.prototype.terminate = function (force, timeout) {\n  var me = this;\n\n  // cancel any pending tasks\n  var taskQueue = this.taskQueue;\n\n  while (taskQueue.size() > 0) {\n    var task = taskQueue.pop();\n    if (task) {\n      task.resolver.reject(new Error(\"Pool terminated\"));\n    } else {\n      break;\n    }\n  }\n\n  taskQueue.clear();\n\n  var f = function (worker) {\n    DEBUG_PORT_ALLOCATOR.releasePort(worker.debugPort);\n    this._removeWorkerFromList(worker);\n  };\n  var removeWorker = f.bind(this);\n\n  var promises = [];\n  var workers = this.workers.slice();\n  workers.forEach(function (worker) {\n    var termPromise = worker\n      .terminateAndNotify(force, timeout)\n      .then(removeWorker)\n      .always(function () {\n        me.onTerminateWorker({\n          forkArgs: worker.forkArgs,\n          forkOpts: worker.forkOpts,\n          workerThreadOpts: worker.workerThreadOpts,\n          script: worker.script,\n        });\n      });\n    promises.push(termPromise);\n  });\n  return Promise.all(promises);\n};\n\n/**\n * Retrieve statistics on tasks and workers.\n * @return {{totalWorkers: number, busyWorkers: number, idleWorkers: number, pendingTasks: number, activeTasks: number}} Returns an object with statistics\n */\nPool.prototype.stats = function () {\n  var totalWorkers = this.workers.length;\n  var busyWorkers = this.workers.filter(function (worker) {\n    return worker.busy();\n  }).length;\n\n  return {\n    totalWorkers: totalWorkers,\n    busyWorkers: busyWorkers,\n    idleWorkers: totalWorkers - busyWorkers,\n\n    pendingTasks: this.taskQueue.size(),\n    activeTasks: busyWorkers,\n  };\n};\n\n/**\n * Ensures that a minimum of minWorkers is up and running\n * @private\n */\nPool.prototype._ensureMinWorkers = function () {\n  if (this.minWorkers) {\n    for (var i = this.workers.length; i < this.minWorkers; i++) {\n      this.workers.push(this._createWorkerHandler());\n    }\n  }\n};\n\n/**\n * Helper function to create a new WorkerHandler and pass all options.\n * @return {WorkerHandler}\n * @private\n */\nPool.prototype._createWorkerHandler = function () {\n  const overriddenParams =\n    this.onCreateWorker({\n      forkArgs: this.forkArgs,\n      forkOpts: this.forkOpts,\n      workerOpts: this.workerOpts,\n      workerThreadOpts: this.workerThreadOpts,\n      script: this.script,\n    }) || {};\n\n  return new WorkerHandler(overriddenParams.script || this.script, {\n    forkArgs: overriddenParams.forkArgs || this.forkArgs,\n    forkOpts: overriddenParams.forkOpts || this.forkOpts,\n    workerOpts: overriddenParams.workerOpts || this.workerOpts,\n    workerThreadOpts:\n      overriddenParams.workerThreadOpts || this.workerThreadOpts,\n    debugPort: DEBUG_PORT_ALLOCATOR.nextAvailableStartingAt(\n      this.debugPortStart\n    ),\n    workerType: this.workerType,\n    workerTerminateTimeout: this.workerTerminateTimeout,\n    emitStdStreams: this.emitStdStreams,\n  });\n};\n\n/**\n * Create queue instance based on strategy\n * @param {'fifo' | 'lifo' | import('./types').TaskQueue} strategy\n * @returns {import('./types').TaskQueue} Queue instance\n * @private\n */\nPool.prototype._createQueue = function (strategy) {\n  if (typeof strategy === \"string\") {\n    switch (strategy) {\n      case \"fifo\":\n        return new FIFOQueue();\n      case \"lifo\":\n        return new LIFOQueue();\n      default:\n        throw new Error(\"Unknown queue strategy: \" + strategy);\n    }\n  }\n\n  if (!strategy) {\n    throw new Error(\"Queue strategy cannot be null or undefined\");\n  }\n\n  // validate if custom queue implements required methods\n  var requiredMethods = [\"push\", \"pop\", \"size\", \"contains\", \"clear\"];\n\n  for (var i = 0; i < requiredMethods.length; i++) {\n    var method = requiredMethods[i];\n    if (typeof strategy[method] !== \"function\") {\n      throw new Error(\"Queue strategy must implement method: \" + method);\n    }\n  }\n\n  return strategy;\n};\n/**\n * Ensure that the maxWorkers option is an integer >= 1\n * @param {*} maxWorkers\n * @returns {boolean} returns true maxWorkers has a valid value\n */\nfunction validateMaxWorkers(maxWorkers) {\n  if (!isNumber(maxWorkers) || !isInteger(maxWorkers) || maxWorkers < 1) {\n    throw new TypeError(\"Option maxWorkers must be an integer number >= 1\");\n  }\n}\n\n/**\n * Ensure that the minWorkers option is an integer >= 0\n * @param {*} minWorkers\n * @returns {boolean} returns true when minWorkers has a valid value\n */\nfunction validateMinWorkers(minWorkers) {\n  if (!isNumber(minWorkers) || !isInteger(minWorkers) || minWorkers < 0) {\n    throw new TypeError(\"Option minWorkers must be an integer number >= 0\");\n  }\n}\n\n/**\n * Test whether a variable is a number\n * @param {*} value\n * @returns {boolean} returns true when value is a number\n */\nfunction isNumber(value) {\n  return typeof value === \"number\";\n}\n\n/**\n * Test whether a number is an integer\n * @param {number} value\n * @returns {boolean} Returns true if value is an integer\n */\nfunction isInteger(value) {\n  return Math.round(value) == value;\n}\n\nmodule.exports = Pool;\n","/**\n * The helper class for transferring data from the worker to the main thread.\n *\n * @param {Object} message The object to deliver to the main thread.\n * @param {Object[]} transfer An array of transferable Objects to transfer ownership of.\n */\nfunction Transfer(message, transfer) {\n  this.message = message;\n  this.transfer = transfer;\n}\n\nmodule.exports = Transfer;\n","/**\n * worker must be started as a child process or a web worker.\n * It listens for RPC messages from the parent process.\n */\n\nvar Transfer = require('./transfer');\n\n/**\n * worker must handle async cleanup handlers. Use custom Promise implementation. \n*/\nvar Promise = require('./Promise').Promise;\n/**\n * Special message sent by parent which causes the worker to terminate itself.\n * Not a \"message object\"; this string is the entire message.\n */\nvar TERMINATE_METHOD_ID = '__workerpool-terminate__';\n\n/**\n * Special message by parent which causes a child process worker to perform cleaup\n * steps before determining if the child process worker should be terminated.\n*/\nvar CLEANUP_METHOD_ID = '__workerpool-cleanup__';\n// var nodeOSPlatform = require('./environment').nodeOSPlatform;\n\n\nvar TIMEOUT_DEFAULT = 1_000;\n\n// create a worker API for sending and receiving messages which works both on\n// node.js and in the browser\nvar worker = {\n  exit: function() {}\n};\n\n// api for in worker communication with parent process\n// works in both node.js and the browser\nvar publicWorker = {\n  /**\n   * Registers listeners which will trigger when a task is timed out or cancled. If all listeners resolve, the worker executing the given task will not be terminated.\n   * *Note*: If there is a blocking operation within a listener, the worker will be terminated.\n   * @param {() => Promise<void>} listener\n  */\n  addAbortListener: function(listener) {\n    worker.abortListeners.push(listener);\n  },\n\n  /**\n    * Emit an event from the worker thread to the main thread.\n    * @param {any} payload\n  */\n  emit: worker.emit\n};\n\nif (typeof self !== 'undefined' && typeof postMessage === 'function' && typeof addEventListener === 'function') {\n  // worker in the browser\n  worker.on = function (event, callback) {\n    addEventListener(event, function (message) {\n      callback(message.data);\n    })\n  };\n  worker.send = function (message, transfer) {\n     transfer ? postMessage(message, transfer) : postMessage (message);\n  };\n}\nelse if (typeof process !== 'undefined') {\n  // node.js\n\n  var WorkerThreads;\n  try {\n    WorkerThreads = require('worker_threads');\n  } catch(error) {\n    if (typeof error === 'object' && error !== null && error.code === 'MODULE_NOT_FOUND') {\n      // no worker_threads, fallback to sub-process based workers\n    } else {\n      throw error;\n    }\n  }\n\n  if (WorkerThreads &&\n    /* if there is a parentPort, we are in a WorkerThread */\n    WorkerThreads.parentPort !== null) {\n    var parentPort  = WorkerThreads.parentPort;\n    worker.send = parentPort.postMessage.bind(parentPort);\n    worker.on = parentPort.on.bind(parentPort);\n    worker.exit = process.exit.bind(process);\n  } else {\n    worker.on = process.on.bind(process);\n    // ignore transfer argument since it is not supported by process\n    worker.send = function (message) {\n      process.send(message);\n    };\n    // register disconnect handler only for subprocess worker to exit when parent is killed unexpectedly\n    worker.on('disconnect', function () {\n      process.exit(1);\n    });\n    worker.exit = process.exit.bind(process);\n  }\n}\nelse {\n  throw new Error('Script must be executed as a worker');\n}\n\nfunction convertError(error) {\n  if (error && error.toJSON) {\n    return JSON.parse(JSON.stringify(error));\n  }\n\n  // turn a class like Error (having non-enumerable properties) into a plain object\n  return JSON.parse(JSON.stringify(error, Object.getOwnPropertyNames(error)));\n}\n\n/**\n * Test whether a value is a Promise via duck typing.\n * @param {*} value\n * @returns {boolean} Returns true when given value is an object\n *                    having functions `then` and `catch`.\n */\nfunction isPromise(value) {\n  return value && (typeof value.then === 'function') && (typeof value.catch === 'function');\n}\n\n// functions available externally\nworker.methods = {};\n\n/**\n * Execute a function with provided arguments\n * @param {String} fn     Stringified function\n * @param {Array} [args]  Function arguments\n * @returns {*}\n */\nworker.methods.run = function run(fn, args) {\n  var f = new Function('return (' + fn + ').apply(this, arguments);');\n  f.worker = publicWorker;\n  return f.apply(f, args);\n};\n\n/**\n * Get a list with methods available on this worker\n * @return {String[]} methods\n */\nworker.methods.methods = function methods() {\n  return Object.keys(worker.methods);\n};\n\n/**\n * Custom handler for when the worker is terminated.\n */\nworker.terminationHandler = undefined;\n\nworker.abortListenerTimeout = TIMEOUT_DEFAULT;\n\n/**\n * Abort handlers for resolving errors which may cause a timeout or cancellation\n * to occur from a worker context\n */\nworker.abortListeners = [];\n\n/**\n * Cleanup and exit the worker.\n * @param {Number} code \n * @returns {Promise<void>}\n */\nworker.terminateAndExit = function(code) {\n  var _exit = function() {\n    worker.exit(code);\n  }\n\n  if(!worker.terminationHandler) {\n    return _exit();\n  }\n  \n  var result = worker.terminationHandler(code);\n  if (isPromise(result)) {\n    result.then(_exit, _exit);\n\n    return result;\n  } else {\n    _exit();\n    return new Promise(function (_resolve, reject) {\n      reject(new Error(\"Worker terminating\"));\n    });\n  }\n}\n\n\n\n/**\n  * Called within the worker message handler to run abort handlers if registered to perform cleanup operations.\n  * @param {Integer} [requestId] id of task which is currently executing in the worker\n  * @return {Promise<void>}\n*/\nworker.cleanup = function(requestId) {\n\n  if (!worker.abortListeners.length) {\n    worker.send({\n      id: requestId,\n      method: CLEANUP_METHOD_ID,\n      error: convertError(new Error('Worker terminating')),\n    });\n\n    // If there are no handlers registered, reject the promise with an error as we want the handler to be notified\n    // that cleanup should begin and the handler should be GCed.\n    return new Promise(function(resolve) { resolve(); });\n  }\n  \n\n  var _exit = function() {\n    worker.exit();\n  }\n\n  var _abort = function() {\n    if (!worker.abortListeners.length) {\n      worker.abortListeners = [];\n    }\n  }\n\n  const promises = worker.abortListeners.map(listener => listener());\n  let timerId;\n  const timeoutPromise = new Promise((_resolve, reject) => {\n    timerId = setTimeout(function () { \n      reject(new Error('Timeout occured waiting for abort handler, killing worker'));\n    }, worker.abortListenerTimeout);\n  });\n\n  // Once a promise settles we need to clear the timeout to prevet fulfulling the promise twice \n  const settlePromise = Promise.all(promises).then(function() {\n    clearTimeout(timerId);\n    _abort();\n  }, function() {\n    clearTimeout(timerId);\n    _exit();\n  });\n\n  // Returns a promise which will result in one of the following cases\n  // - Resolve once all handlers resolve\n  // - Reject if one or more handlers exceed the 'abortListenerTimeout' interval\n  // - Reject if one or more handlers reject\n  // Upon one of the above cases a message will be sent to the handler with the result of the handler execution\n  // which will either kill the worker if the result contains an error, or keep it in the pool if the result\n  // does not contain an error.\n  return new Promise(function(resolve, reject) {\n    settlePromise.then(resolve, reject);\n    timeoutPromise.then(resolve, reject);\n  }).then(function() {\n    worker.send({\n      id: requestId,\n      method: CLEANUP_METHOD_ID,\n      error: null,\n    });\n  }, function(err) {\n    worker.send({\n      id: requestId,\n      method: CLEANUP_METHOD_ID,\n      error: err ? convertError(err) : null,\n    });\n  });\n}\n\nvar currentRequestId = null;\n\nworker.on('message', function (request) {\n  if (request === TERMINATE_METHOD_ID) {\n    return worker.terminateAndExit(0);\n  }\n\n  if (request.method === CLEANUP_METHOD_ID) {\n    return worker.cleanup(request.id);\n  }\n\n  try {\n    var method = worker.methods[request.method];\n\n    if (method) {\n      currentRequestId = request.id;\n      \n      // execute the function\n      var result = method.apply(method, request.params);\n\n      if (isPromise(result)) {\n        // promise returned, resolve this and then return\n        result\n            .then(function (result) {\n              if (result instanceof Transfer) {\n                worker.send({\n                  id: request.id,\n                  result: result.message,\n                  error: null\n                }, result.transfer);\n              } else {\n                worker.send({\n                  id: request.id,\n                  result: result,\n                  error: null\n                });\n              }\n              currentRequestId = null;\n            })\n            .catch(function (err) {\n              worker.send({\n                id: request.id,\n                result: null,\n                error: convertError(err),\n              });\n              currentRequestId = null;\n            });\n      }\n      else {\n        // immediate result\n        if (result instanceof Transfer) {\n          worker.send({\n            id: request.id,\n            result: result.message,\n            error: null\n          }, result.transfer);\n        } else {\n          worker.send({\n            id: request.id,\n            result: result,\n            error: null\n          });\n        }\n\n        currentRequestId = null;\n      }\n    }\n    else {\n      throw new Error('Unknown method \"' + request.method + '\"');\n    }\n  }\n  catch (err) {\n    worker.send({\n      id: request.id,\n      result: null,\n      error: convertError(err)\n    });\n  }\n});\n\n/**\n * Register methods to the worker\n * @param {Object} [methods]\n * @param {import('./types.js').WorkerRegisterOptions} [options]\n */\nworker.register = function (methods, options) {\n\n  if (methods) {\n    for (var name in methods) {\n      if (methods.hasOwnProperty(name)) {\n        worker.methods[name] = methods[name];\n        worker.methods[name].worker = publicWorker;\n      }\n    }\n  }\n\n  if (options) {\n    worker.terminationHandler = options.onTerminate;\n    // register listener timeout or default to 1 second\n    worker.abortListenerTimeout = options.abortListenerTimeout || TIMEOUT_DEFAULT;\n  }\n\n  worker.send('ready');\n};\n\nworker.emit = function (payload) {\n  if (currentRequestId) {\n    if (payload instanceof Transfer) {\n      worker.send({\n        id: currentRequestId,\n        isEvent: true,\n        payload: payload.message\n      }, payload.transfer);\n      return;\n    }\n\n    worker.send({\n      id: currentRequestId,\n      isEvent: true,\n      payload\n    });\n  }\n};\n\n\nif (typeof exports !== 'undefined') {\n  exports.add = worker.register;\n  exports.emit = worker.emit;\n}\n","const {platform, isMainThread, cpus} = require('./environment');\nconst {TerminateError} = require('./WorkerHandler');\n\n/** @typedef {import(\"./Pool\")} Pool */\n/** @typedef {import(\"./types.js\").WorkerPoolOptions} WorkerPoolOptions */\n/** @typedef {import(\"./types.js\").WorkerRegisterOptions} WorkerRegisterOptions */\n\n/**\n * @template { { [k: string]: (...args: any[]) => any } } T\n * @typedef {import('./types.js').Proxy<T>} Proxy<T>\n */\n\n/**\n * @overload\n * Create a new worker pool\n * @param {WorkerPoolOptions} [script]\n * @returns {Pool} pool\n */\n/**\n * @overload\n * Create a new worker pool\n * @param {string} [script]\n * @param {WorkerPoolOptions} [options]\n * @returns {Pool} pool\n */\nfunction pool(script, options) {\n  var Pool = require('./Pool');\n\n  return new Pool(script, options);\n};\nexports.pool = pool;\n\n/**\n * Create a worker and optionally register a set of methods to the worker.\n * @param {{ [k: string]: (...args: any[]) => any }} [methods]\n * @param {WorkerRegisterOptions} [options]\n */\nfunction worker(methods, options) {\n  var worker = require('./worker');\n  worker.add(methods, options);\n};\nexports.worker = worker;\n\n/**\n * Sends an event to the parent worker pool.\n * @param {any} payload \n */\nfunction workerEmit(payload) {\n  var worker = require('./worker');\n  worker.emit(payload);\n};\nexports.workerEmit = workerEmit;\n\nconst {Promise} = require('./Promise');\nexports.Promise = Promise;\n\nexports.Transfer = require('./transfer');\n\nexports.platform = platform;\nexports.isMainThread = isMainThread;\nexports.cpus = cpus;\nexports.TerminateError = TerminateError;"],"names":["isNode","nodeProcess","versions","node","module","exports","platform","process","worker_threads","require","isMainThread","connected","Window","cpus","self","navigator","hardwareConcurrency","length","Promise","handler","parent","me","SyntaxError","_onSuccess","_onFail","resolved","rejected","pending","Symbol","toStringTag","_process","onSuccess","onFail","push","then","resolve","reject","s","_then","f","_resolve","result","forEach","fn","_reject","error","cancel","CancellationError","timeout","delay","timer","setTimeout","TimeoutError","always","clearTimeout","callback","res","prototype","finally","final","all","promises","remaining","results","p","i","defer","resolver","promise","message","stack","Error","constructor","name","_Promise","validateOptions","options","allowedOptionNames","objectName","optionNames","Object","keys","unknownOptionName","find","optionName","includes","illegalOptionName","allowedOptionName","workerOptsNames","forkOptsNames","workerThreadOptsNames","embeddedWorker","_require$$","require$$0","environment","require$$1","require$$2","TERMINATE_METHOD_ID","CLEANUP_METHOD_ID","ensureWorkerThreads","WorkerThreads","tryRequireWorkerThreads","ensureWebWorker","Worker","_typeof","code","getDefaultWorker","Blob","window","URL","createObjectURL","blob","require$$3","type","__dirname","setupWorker","script","workerType","setupBrowserWorker","workerOpts","setupWorkerThreadWorker","setupProcessWorker","resolveForkOptions","worker","isBrowserWorker","on","event","addEventListener","data","send","transfer","postMessage","_options$emitStdStrea","_options$emitStdStrea2","workerThreadOpts","_objectSpread","stdout","emitStdStreams","stderr","isWorkerThread","kill","terminate","disconnect","emit","child_process","forkOpts","fork","forkArgs","call","isChildProcess","opts","processExecArgv","execArgv","join","inspectorActive","indexOf","debugBrk","debugPort","arg","assign","concat","stdio","undefined","objectToError","obj","temp","props","handleEmittedStdPayload","payload","values","processing","task","_task$options","tracking","_task$options2","WorkerHandler","_options","workerTerminateTimeout","ready","requestQueue","toString","response","terminated","dispatchQueuedRequests","id","isEvent","terminating","method","trackedTask","timeoutId","WrappedTimeoutError","onError","create","_iterator","_createForOfIteratorHelper","splice","_step","n","done","request","value","err","e","TerminateError","exitCode","signalCode","spawnargs","spawnfile","cleaning","terminationHandler","lastId","methods","exec","params","catch","terminateAndNotify","busy","force","_i","_Object$values","cleanup","removeAllListeners","killed","cleanExitTimeout","once","timeoutError","_Error","cause","_this","_classCallCheck","_callSuper","_inherits","_createClass","_wrapNativeSuper","WorkerHandlerModule","_tryRequireWorkerThreads","_setupProcessWorker","_setupBrowserWorker","_setupWorkerThreadWorker","FIFOQueue","tasks","pop","shift","size","contains","clear","LIFOQueue","queues","MAX_PORTS","debugPortAllocator","DebugPortAllocator","ports","nextAvailableStartingAt","starting","releasePort","port","_require$$2","require$$4","DEBUG_PORT_ALLOCATOR","Pool","workers","taskQueue","_createQueue","queueStrategy","freeze","debugPortStart","nodeWorker","maxQueueSize","Infinity","onCreateWorker","onTerminateWorker","validateMaxWorkers","maxWorkers","Math","max","minWorkers","validateMinWorkers","_ensureMinWorkers","_boundNext","_next","bind","Array","isArray","TypeError","originalTimeout","String","proxy","arguments","pool","slice","_getWorker","_removeWorker","_createWorkerHandler","_removeWorkerFromList","index","removeWorker","termPromise","stats","totalWorkers","busyWorkers","filter","idleWorkers","pendingTasks","activeTasks","overriddenParams","strategy","requiredMethods","isNumber","isInteger","round","Pool_1","Transfer","TIMEOUT_DEFAULT","exit","publicWorker","addAbortListener","listener","abortListeners","parentPort","convertError","toJSON","JSON","parse","stringify","getOwnPropertyNames","isPromise","run","args","Function","apply","abortListenerTimeout","terminateAndExit","_exit","requestId","_abort","map","timerId","timeoutPromise","settlePromise","currentRequestId","register","hasOwnProperty","onTerminate","add","pool_1","src","worker_1","workerEmit","workerEmit_1","require$$5","platform_1","isMainThread_1","cpus_1","TerminateError_1"],"mappings":"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"}